// <auto-generated />
using System;
using AdminRooms.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminRooms.Migrations
{
    [DbContext(typeof(RoomsDbContext))]
    partial class RoomsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminRooms.Models.Asignacion", b =>
                {
                    b.Property<int>("IdAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Asignacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsignacion"));

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Ingreso");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Pago");

                    b.Property<DateTime?>("FechaSalidaPrev")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Salida_Prev");

                    b.Property<int>("IdCasa")
                        .HasColumnType("int")
                        .HasColumnName("Id_Casa");

                    b.Property<int>("IdCuarto")
                        .HasColumnType("int")
                        .HasColumnName("Id_Cuarto");

                    b.Property<int>("IdHuesped")
                        .HasColumnType("int")
                        .HasColumnName("Id_Huesped");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.HasKey("IdAsignacion");

                    b.HasIndex("IdCasa");

                    b.HasIndex("IdCuarto");

                    b.HasIndex("IdHuesped");

                    b.ToTable("Asignacion", (string)null);
                });

            modelBuilder.Entity("AdminRooms.Models.Casa", b =>
                {
                    b.Property<int>("IdCasa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Casa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCasa"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NumeroCuartos")
                        .HasColumnType("int")
                        .HasColumnName("Numero_Cuartos");

                    b.HasKey("IdCasa");

                    b.ToTable("Casa", (string)null);
                });

            modelBuilder.Entity("AdminRooms.Models.Cobro", b =>
                {
                    b.Property<int>("IdCobros")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Cobros");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCobros"));

                    b.Property<int>("IdAsignacion")
                        .HasColumnType("int")
                        .HasColumnName("Id_Asignacion");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<DateTime>("Periodo")
                        .HasColumnType("date");

                    b.HasKey("IdCobros");

                    b.HasIndex("IdAsignacion");

                    b.ToTable("Cobros");
                });

            modelBuilder.Entity("AdminRooms.Models.Cuarto", b =>
                {
                    b.Property<int>("IdCuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Cuarto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCuarto"));

                    b.Property<double?>("Costo")
                        .HasColumnType("float");

                    b.Property<bool?>("Disponibilidad")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCasa")
                        .HasColumnType("int")
                        .HasColumnName("Id_Casa");

                    b.Property<int?>("IdHuesped")
                        .HasColumnType("int")
                        .HasColumnName("Id_Huesped");

                    b.Property<int?>("NumeroCuarto")
                        .HasColumnType("int")
                        .HasColumnName("Numero_Cuarto");

                    b.HasKey("IdCuarto");

                    b.HasIndex("IdCasa");

                    b.HasIndex("IdHuesped");

                    b.ToTable("Cuarto", (string)null);
                });

            modelBuilder.Entity("AdminRooms.Models.Gasto", b =>
                {
                    b.Property<int>("IdGasto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Gasto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGasto"));

                    b.Property<string>("NombreGasto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre_Gasto");

                    b.HasKey("IdGasto");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("AdminRooms.Models.GastosRegistro", b =>
                {
                    b.Property<int>("IdGastosRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_GastosRegistro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGastosRegistro"));

                    b.Property<int>("IdGastos")
                        .HasColumnType("int")
                        .HasColumnName("Id_Gastos");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("IdGastosRegistro");

                    b.HasIndex("IdGastos");

                    b.ToTable("GastosRegistro", (string)null);
                });

            modelBuilder.Entity("AdminRooms.Models.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Genero");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGenero"));

                    b.Property<string>("Genero1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Genero");

                    b.HasKey("IdGenero");

                    b.ToTable("Genero", (string)null);
                });

            modelBuilder.Entity("AdminRooms.Models.Huesped", b =>
                {
                    b.Property<int>("IdHuesped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Huesped");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHuesped"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Alta");

                    b.Property<int?>("IdCasa")
                        .HasColumnType("int")
                        .HasColumnName("Id_Casa");

                    b.Property<int?>("IdCuarto")
                        .HasColumnType("int")
                        .HasColumnName("Id_Cuarto");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int")
                        .HasColumnName("Id_Genero");

                    b.Property<string>("MotivoEstancia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Motivo_Estancia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("PagoInicial")
                        .HasColumnType("float")
                        .HasColumnName("Pago_Inicial");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TelefonoEmergencia")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Telefono_Emergencia");

                    b.HasKey("IdHuesped");

                    b.HasIndex("IdCasa");

                    b.HasIndex("IdCuarto");

                    b.HasIndex("IdGenero");

                    b.ToTable("Huesped", (string)null);
                });

            modelBuilder.Entity("AdminRooms.Models.ViewModel.CuartoViewModel", b =>
                {
                    b.Property<int>("IdCuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCuarto"));

                    b.Property<double?>("Costo")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int?>("IdHuesped")
                        .HasColumnType("int");

                    b.HasKey("IdCuarto");

                    b.ToTable("CuartoViewModel");
                });

            modelBuilder.Entity("AdminRooms.Models.ViewModel.HuespedViewModel", b =>
                {
                    b.Property<int>("IdHuesped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHuesped"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("MotivoEstancia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PagoInicial")
                        .HasColumnType("float");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoEmergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHuesped");

                    b.ToTable("HuespedViewModel");
                });

            modelBuilder.Entity("AdminRooms.Models.Asignacion", b =>
                {
                    b.HasOne("AdminRooms.Models.Casa", "IdCasaNavigation")
                        .WithMany("Asignacions")
                        .HasForeignKey("IdCasa")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Casa");

                    b.HasOne("AdminRooms.Models.Cuarto", "IdCuartoNavigation")
                        .WithMany("Asignacions")
                        .HasForeignKey("IdCuarto")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Cuarto");

                    b.HasOne("AdminRooms.Models.Huesped", "IdHuespedNavigation")
                        .WithMany("Asignacions")
                        .HasForeignKey("IdHuesped")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Huesped");

                    b.Navigation("IdCasaNavigation");

                    b.Navigation("IdCuartoNavigation");

                    b.Navigation("IdHuespedNavigation");
                });

            modelBuilder.Entity("AdminRooms.Models.Cobro", b =>
                {
                    b.HasOne("AdminRooms.Models.Asignacion", "IdAsignacionNavigation")
                        .WithMany("Cobros")
                        .HasForeignKey("IdAsignacion")
                        .IsRequired()
                        .HasConstraintName("FK_Cobros_Asignacion");

                    b.Navigation("IdAsignacionNavigation");
                });

            modelBuilder.Entity("AdminRooms.Models.Cuarto", b =>
                {
                    b.HasOne("AdminRooms.Models.Casa", "IdCasaNavigation")
                        .WithMany("Cuartos")
                        .HasForeignKey("IdCasa")
                        .HasConstraintName("FK_Cuarto_Casa");

                    b.HasOne("AdminRooms.Models.Huesped", "IdHuespedNavigation")
                        .WithMany("Cuartos")
                        .HasForeignKey("IdHuesped")
                        .HasConstraintName("FK_Cuarto_Huesped");

                    b.Navigation("IdCasaNavigation");

                    b.Navigation("IdHuespedNavigation");
                });

            modelBuilder.Entity("AdminRooms.Models.GastosRegistro", b =>
                {
                    b.HasOne("AdminRooms.Models.Gasto", "IdGastosNavigation")
                        .WithMany("GastosRegistros")
                        .HasForeignKey("IdGastos")
                        .IsRequired()
                        .HasConstraintName("FK_GastosRegistro_Gastos");

                    b.Navigation("IdGastosNavigation");
                });

            modelBuilder.Entity("AdminRooms.Models.Huesped", b =>
                {
                    b.HasOne("AdminRooms.Models.Casa", "IdCasaNavigation")
                        .WithMany("Huespeds")
                        .HasForeignKey("IdCasa")
                        .HasConstraintName("FK_Huesped_Casa");

                    b.HasOne("AdminRooms.Models.Cuarto", "IdCuartoNavigation")
                        .WithMany("Huespeds")
                        .HasForeignKey("IdCuarto")
                        .HasConstraintName("FK_Huesped_Cuarto");

                    b.HasOne("AdminRooms.Models.Genero", "IdGeneroNavigation")
                        .WithMany("Huespeds")
                        .HasForeignKey("IdGenero")
                        .IsRequired()
                        .HasConstraintName("FK_Huesped_Genero");

                    b.Navigation("IdCasaNavigation");

                    b.Navigation("IdCuartoNavigation");

                    b.Navigation("IdGeneroNavigation");
                });

            modelBuilder.Entity("AdminRooms.Models.Asignacion", b =>
                {
                    b.Navigation("Cobros");
                });

            modelBuilder.Entity("AdminRooms.Models.Casa", b =>
                {
                    b.Navigation("Asignacions");

                    b.Navigation("Cuartos");

                    b.Navigation("Huespeds");
                });

            modelBuilder.Entity("AdminRooms.Models.Cuarto", b =>
                {
                    b.Navigation("Asignacions");

                    b.Navigation("Huespeds");
                });

            modelBuilder.Entity("AdminRooms.Models.Gasto", b =>
                {
                    b.Navigation("GastosRegistros");
                });

            modelBuilder.Entity("AdminRooms.Models.Genero", b =>
                {
                    b.Navigation("Huespeds");
                });

            modelBuilder.Entity("AdminRooms.Models.Huesped", b =>
                {
                    b.Navigation("Asignacions");

                    b.Navigation("Cuartos");
                });
#pragma warning restore 612, 618
        }
    }
}
